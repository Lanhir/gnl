#include "get_next_line.h"

char        *ft_strfjoin(char *s1, char *s2)
{
    size_t    lens;
    char    *str;

    if (s1 == NULL || s2 == NULL)
        return (NULL);
    lens = (ft_strlen(s1) + ft_strlen(s2));
    str = (char *)malloc(sizeof(str) * (lens + 1));
    if (str == 0)
        return (NULL);
    ft_strcpy(str, s1);
    ft_strcat(str, s2);
    str[lens + 1] = '\0';
    ft_strdel(&s1);
    return (str);
}

static int    ft_findnl(char **temp, char **line)
{
    char    *add;
    int        a;
    int        len;

    a = -1;
    len = ft_strlen(*temp);
    while (++a < len)
    {
        if (temp[0][a] == '\n')
        {
            add = ft_strsub(*temp, 0, a);
            *line = ft_strdup(add);
            ft_strdel(&add);
            add = ft_strsub(*temp, a + 1, len - a);
            free(*temp);
            *temp = ft_strdup(add);
            ft_strdel(&add);
            return (1);
        }
    }
    return (0);
}

static void    ft_read(int ret, char *buff, char **temp)
{
    buff[ret] = '\0';
    if (*temp)
        *temp = ft_strfjoin(*temp, buff);
    else
        *temp = ft_strdup(buff);
}

int            get_next_line(const int fd, char **line)
{
    static char    *str;
    char        buff[BUFF_SIZE + 1];
    int            ret;

    if (str && ft_findnl(&str, line) == 1)
        return (1);
    while ((ret = read(fd, buff, BUFF_SIZE)) > 0)
    {
        ft_read(ret, buff, &str);
        if (ft_strchr(str, '\n'))
            break ;
    }
    if ((ret == -1) || (!line) || (fd < 0))
        return (-1);
    if ((str) && ft_findnl(&str, line) == 1)
        return (1);
    if ((ret == 0) && (str) && (ft_strlen(str)))
    {
        *line = ft_strdup(str);
        free(str);
        str = NULL;
        return (1);
    }
    return (0);
}
